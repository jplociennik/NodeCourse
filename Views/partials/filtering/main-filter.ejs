<%
// Default configuration - will be overridden by passed config
const filterConfig = {
    features: ['search', 'sort'],
    title: 'Wyszukiwanie i sortowanie',
    searchConfig: {
        placeholder: 'Szukaj...',
        label: 'Szukaj zadań'
    },
    sortConfig: {
        label: 'Sortuj według',
        options: []
    },
    ...config
};

const hasSearch = filterConfig.features.includes('search');
const hasSort = filterConfig.features.includes('sort');
const hasFilter = filterConfig.features.includes('filter');
%>

<!-- Filter content without card wrapper - will be rendered inside sidebar -->
        
        <% if (hasSearch) { %>
        <!-- Search Section -->
        <div class="mb-4">
            <label class="form-label fw-bold">
                <i class="bi bi-search"></i> <%= filterConfig.searchConfig.label %>
            </label>
            <%- include('./searchbar', { config: filterConfig.searchConfig, query: typeof query !== 'undefined' ? query : {} }) %>
        </div>
        <% } %>

        <% if (hasSort) { %>
        <!-- Sort Section -->
        <div class="mb-4">
            <label class="form-label fw-bold">
                <i class="bi bi-sort-alpha-down"></i> <%= filterConfig.sortConfig.label %>
            </label>
            <%- include('./sortbar', { config: filterConfig.sortConfig, query: typeof query !== 'undefined' ? query : {} }) %>
        </div>
        <% } %>

        <% if (hasFilter) { %>
        <!-- Advanced Filters Section -->
        <div class="mb-4">
            <label class="form-label fw-bold" style="cursor: pointer;" data-action="toggle-advanced-filters">
                <i class="bi bi-filter"></i> <%= filterConfig.filterConfig.label %>
                <i id="filterToggleIcon" class="bi bi-chevron-down ms-1"></i>
            </label>
            <%- include('./filter', { config: filterConfig.filterConfig, query: typeof query !== 'undefined' ? query : {} }) %>
        </div>
        <% } %>

        <!-- Action Buttons -->
        <% if (hasSearch || hasSort || hasFilter) { %>
        <div class="d-grid gap-2 mt-4">
            <button type="button" 
                    class="btn btn-success" 
                    data-action="apply-filters">
                <i class="bi bi-check-circle"></i> Zastosuj filtry
            </button>
            <button type="button" 
                    class="btn btn-outline-secondary" 
                    data-action="clear-filters">
                <i class="bi bi-x-circle"></i> Wyczyść filtry
            </button>
        </div>
        <% } %>


<!-- Store config for FilterManager -->
<script type="application/json" id="filterConfig"><%- JSON.stringify(filterConfig) %></script>

<!-- Load FilterManager and modules in proper order -->
<!-- Global utilities are loaded in main.ejs layout -->
<!-- Load statistics module (used by filtering system) -->
<script type="module" src="/js/utils/statistics.js"></script>

<!-- Load fallback system -->
<script type="module" src="/js/filtering/filters.js"></script>

<!-- Load UI utilities -->
<script type="module" src="/js/filtering/filter-ui.js"></script>

<!-- Load modules -->
<script type="module" src="/js/filtering/search-module.js"></script>
<script type="module" src="/js/filtering/sort-module.js"></script>
<script type="module" src="/js/filtering/filter-module.js"></script>

<!-- Load main manager -->
<script type="module" src="/js/filtering/filter-manager.js"></script>

<!-- Initialize everything -->
<script type="module" src="/js/filtering/filter-init.js"></script>

 